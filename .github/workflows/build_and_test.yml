name: "Build & Test"

on:
  push:
    branches:
      - master
      - branch-DDS-3.*
      - gh_wf_*
    paths:
      - '**'
      # Don't run this workflow if the only files that changed are the
      # following. Make sure this is the same as the "pull_request.paths" list.
      - '!AUTHORS'
      - '!PROBLEM-REPORT-FORM'
      - '!LICENSE'
      - '!azure-pipelines.yml'
      - '!.travis.yml'
      - '!Dockerfile**'
      - '!.dockerignore'
      - '!.mailmap'
      - '!.github/workflows/lint.yml'
      - '!etc/**'
      - '!docs/**'
      - '!hooks/**'
      - '!tools/scripts/**'
      - '!**.md'
      - '!**.rst'
      - '!**.txt'
      - '!**/.gitignore'
      - '!**/.lint_config'
      - '!**/README*'
  pull_request:
    branches:
      - master
      - branch-DDS-3.*
    paths:
      - '**'
      # Don't run this workflow if the only files that changed are the
      # following. Make sure this is the same as the "push.paths" list.
      - '!AUTHORS'
      - '!PROBLEM-REPORT-FORM'
      - '!LICENSE'
      - '!azure-pipelines.yml'
      - '!.travis.yml'
      - '!Dockerfile**'
      - '!.dockerignore'
      - '!.mailmap'
      - '!.github/workflows/lint.yml'
      - '!etc/**'
      - '!docs/**'
      - '!hooks/**'
      - '!tools/scripts/**'
      - '!**.md'
      - '!**.rst'
      - '!**.txt'
      - '!**/.gitignore'
      - '!**/.lint_config'
      - '!**/README*'

env:
  TRIGGERING_COMMIT: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:

  wait_cancel_previous:

    runs-on: ubuntu-20.04

    steps:
    - uses: convictional/trigger-workflow-and-wait@v1.3.0
      with:
        owner: ${{ github.repository_owner }}
        repo: OpenDDS
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow_file_name: cancel_previous_runs.yml
        ref: ${{ env.TRIGGERING_COMMIT }}
        trigger_workflow: false

  ACE_TAO_w19_p1_stat_js0_3:

    runs-on: windows-2019

    needs: wait_cancel_previous

    steps:
    - name: checkout OpenDDS
      uses: actions/checkout@v2.3.4
      with:
        path: OpenDDS
        submodules: true
    - name: checkout ACE_TAO
      uses: actions/checkout@v2.3.4
      with:
        repository: DOCGroup/ACE_TAO
        ref: ace6tao2
        path: OpenDDS/ACE_TAO
    - name: get ACE_TAO commit
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        export ACE_COMMIT=$(git rev-parse HEAD)
        echo "ACE_COMMIT=$ACE_COMMIT" >> $GITHUB_ENV
    - name: Cache Artifact
      id: cache-artifact
      uses: actions/cache@v2.1.4
      with:
        path: ${{ github.job }}.tar.xz
        key: ${{ github.job }}_ace6tao2_${{ env.ACE_COMMIT }}
    - name: install openssl-windows & xerces-c
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: lukka/run-vcpkg@v6
      with:
        vcpkgGitCommitId: ec6fe06e8da05a8157dc8581fa96b36b571c1bd5
        vcpkgArguments: --recurse openssl-windows xerces-c
        vcpkgTriplet: x64-windows
    - name: checkout MPC
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: actions/checkout@v2.3.4
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: set up msvc env
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: ilammy/msvc-dev-cmd@v1.7.0
    - name: configure OpenDDS
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        cd OpenDDS
        configure --ipv6 --static --no-rapidjson --ace=%GITHUB_WORKSPACE%/OpenDDS/ACE_TAO/ACE --tao=%GITHUB_WORKSPACE%/OpenDDS/ACE_TAO/TAO --mpc=%GITHUB_WORKSPACE%/MPC --xerces3=%VCPKG_ROOT%/installed/x64-windows --openssl=%VCPKG_ROOT%/installed/x64-windows --mpcopts=-hierarchy
    - name: build ACE & TAO
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        cd OpenDDS
        call setenv.cmd
        cd ACE_TAO\ACE
        msbuild -p:Configuration=Debug,Platform=x64 -m ace.sln
        cd ..\TAO
        msbuild -p:Configuration=Debug,Platform=x64 -m tao.sln
    - name: create ACE_TAO tar.xz artifact
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        perl -ni.bak -e "print unless /opendds/" ACE/bin/MakeProjectCreator/config/default.features # remove opendds features from here, let individual build configure scripts handle those
        find . -iname "*\.obj" | xargs rm
        tar cvf ../../${{ github.job }}.tar ACE/ace/config.h
        git clean -xdfn | cut -d ' ' -f 3- | xargs tar uvf ../../${{ github.job }}.tar
        xz -3 ../../${{ github.job }}.tar
    - name: upload ACE_TAO artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}_artifact
        path: ${{ github.job }}.tar.xz

  build_w19_p1_stat_js0_3:

    runs-on: windows-2019

    needs: ACE_TAO_w19_p1_stat_js0_3

    steps:
    - name: install openssl-windows & xerces-c
      uses: lukka/run-vcpkg@v6
      with:
        vcpkgGitCommitId: ec6fe06e8da05a8157dc8581fa96b36b571c1bd5
        vcpkgArguments: --recurse openssl-windows xerces-c
        vcpkgTriplet: x64-windows
    - name: checkout MPC
      uses: actions/checkout@v2.3.4
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: checkout OpenDDS
      uses: actions/checkout@v2.3.4
      with:
        path: OpenDDS
        submodules: true
    - name: checkout ACE_TAO
      uses: actions/checkout@v2.3.4
      with:
        repository: DOCGroup/ACE_TAO
        ref: ace6tao2
        path: OpenDDS/ACE_TAO
    - name: download ACE_TAO artifact
      uses: actions/download-artifact@v2
      with:
        name: ACE_TAO_w19_p1_stat_js0_3_artifact
        path: OpenDDS/ACE_TAO
    - name: extract ACE_TAO artifact
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        tar xvfJ ACE_TAO_w19_p1_stat_js0_3.tar.xz
        rm -f ACE_TAO_w19_p1_stat_js0_3.tar.xz
    - uses: ammaraskar/msvc-problem-matcher@0.1
    - name: set up msvc env
      uses: ilammy/msvc-dev-cmd@v1.7.0
    - name: configure OpenDDS
      shell: cmd
      run: |
        cd OpenDDS
        configure --ipv6 --static --no-rapidjson --ace=%GITHUB_WORKSPACE%/OpenDDS/ACE_TAO/ACE --tao=%GITHUB_WORKSPACE%/OpenDDS/ACE_TAO/TAO --mpc=%GITHUB_WORKSPACE%/MPC --xerces3=%VCPKG_ROOT%/installed/x64-windows --openssl=%VCPKG_ROOT%/installed/x64-windows
    - name: check build configuration
      shell: cmd
      run: |
        cd OpenDDS
        call setenv.cmd
        perl tools\scripts\show_build_config.pl
    - name: build OpenDDS
      shell: cmd
      run: |
        cd OpenDDS
        call setenv.cmd
        msbuild -p:Configuration=Debug,Platform=x64 -m DDS_no_tests.sln
    - name: run Dev Guide tests
      shell: cmd
      run: |
        cd OpenDDS
        call setenv.cmd
        cd DevGuideExamples\DCPS\Messenger
        perl run_test.pl -ExeSubDir Static_Debug
    - name: build and run CMake tests
      shell: cmd
      run: |
        cd OpenDDS
        call setenv.cmd
        cd tests/cmake_integration/
        perl run_ci_tests.pl --no-shared --build-config=Debug
    # - name: build messenger tests
    #   shell: cmd
    #   run: |
    #     cd OpenDDS
    #     call setenv.cmd
    #     cd tests\DCPS\Messenger
    #     mwc.pl -type vs2019
    #     dir
    #     msbuild -p:Configuration=Debug,Platform=x64 -m Messenger.sln
    - name: build compiler tests
      shell: cmd
      run: |
        cd OpenDDS
        call setenv.cmd
        cd tests\DCPS\Compiler
        perl %ACE_ROOT%\bin\mwc.pl -type vs2019 -static
        dir
    - name: make compiler tests
      shell: cmd
      run: |
        cd OpenDDS
        call setenv.cmd
        cd tests\DCPS\Compiler
        dir
        msbuild -p:Configuration=Debug,Platform=x64 -m Compiler.sln
    - name: run Static CI tests
      shell: cmd
      run: |
        cd OpenDDS
        call setenv.cmd
        cd tests
        perl auto_run_tests.pl -l static_ci_tests.lst -Config -ExeSubDir Static_Debug -Config CXX11 -Config STATIC -Config IPV6 -Config RTPS -Config GH_ACTIONS
    - name: create OpenDDS tar.xz artifact
      shell: bash
      run: |
        cd OpenDDS
        rm -rf ACE_TAO
        find . -iname "*\.obj" -o -iname "*\.pdb" -o -iname "*\.idb" -o -type f -iname "*\.tlog" | xargs rm
        tar cvf ../${{ github.job }}.tar setenv.cmd
        git clean -xdfn | cut -d ' ' -f 3- | xargs tar uvf ../${{ github.job }}.tar
        xz -3 ../${{ github.job }}.tar
    - name: upload OpenDDS artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}_artifact
        path: ${{ github.job }}.tar.xz
